const input1 = `.##.#.#.#..#.#.##.##..#.###.#.####..#.#.##.##..##.#....##.#..####.##..###
#..##.####.####.##.#.#..#.#..#.##.###..#...##.#.#...#...#..#.##.#.###.#..
#.#..##....#.##.#.#...###....##.#...#..#.#.#####.##..#.##..###.####.#.###
.#.....#.####..#.....#....#...#...###.###.#.#..##..####....####...#..#..#
##.#.##.#.#.......##...###.##.#.###...#.#.#.....#.#...##.#..#...#.##.###.
#..##.#####.###.####.###..##.##...#..##.#..###.#####.####..#......###..#.
#...###.#.###.#..#####.#.#.#.####...###.#..#....#....#...#..##.#...#.#.#.
.###.##.##..#.........#.###.#.#..#.##.#.#.##.....#..###..#..##.##.####..#
#.##.#..#####..###.#.......#####.#...###..###.#.#...####.#.###.##..##...#
.#..#....#.##..#...##.###.##....#...##...#.....##.###...#.##.###..###...#
.###.###....#.######.###..####.#..##..#.#.#####.####.#...##.##.....##..#.
#..#.##..##.#.#.##.##..#######.#.########...##.#..##.##..#..##.#.###.####
#.##...##.##..####.....#####..##.#...#...#.#.#.#..#.######.....###.####.#
###.....#...#.########..########..#..###..##.#.#.#.##.#.##..##.####.##.#.
##.....#..##.#...#.#.##.#...#..##.#.######..##..##...#..##..#....##.#..##
#.####.#.#..#...#.........###...........#.....#.#...##......#.###..##....
.####.####....#...#.#.##.######......#..##...##..#.#.###...####.##..#..#.
.#.##..#.##.#.##....#..#####....###..#.##..#.##.#...#.#.##.#.......##.#..
#..#.#.#.#..##...#..##...#####....#...######.#......#######.....#..#.####
#...####..#.#.#.#.##....#.##.#..##...##..#.#..#.##.##.##.##....#.##.###..
..#.###.####..##.##.#...#.#......#.##..###.....##.###......####.....#...#
.##..####...##.#...#.##..##.##..#....###.#..####.######.#..#...#.#....##.
..#....#.#...##.#.###..##.##...#.#..#.##...##...#....#.##.#.#.#...#..####
##..###...#.##.##..###.##..####.#.###.##.###.....###.####.##..#..#..#.##.
.#.#.##.#.#..##..##.##.#.##.##.#...##.#....###.#..#...#..#.#.###.#..##..#
##...........###.#.###..#######....##.#.###.#...###.##.######.##..#..##..
###....#...##....#......#...#...##...#.##.#.#.#.###....#...##...##..#.#..
#.###...#..#.#.###.#.##.....###..#..##...#.###...##.#####.#...#.....###.#
......##...#.#..#.####.##.###..#.#..#####.####.....#.........#....##.#.##
.....#.#.#.#.#.#..##.#..##.#....###.#.#..####..##..##...#.##.#####..#..#.
##..#......###.......#.#.###..#..###..###.##..#..#.#.....#....##.###..###
...#.##.##.######....##...###..##.#......#.##....#....#..#.######.##...#.
......#.#.#.#..##.#.##...##.#....#.#.#####...#..####..#.##.#...###...##.#
.....####....#.#####.##...##...........##.##...####..###.####.#.##...###.
#....##..........##..#...#...##..#.#.###.##..#.###.#...#..#..#####....#..
.#####.###...#.##.#...####.#.##....##.###....#..#..#.#..######...###.#.#.
..##.###....#..#.#....#.##..###...#.##..#..######.##.#..####..##.#.#.####
#.#..#.#..##..#.#.####..#.##..####...##.#..#.###.##..#..###.##....###.#.#
..#.#...##..##....###.##.#..#.#..###.#..#.#.##..#.#.###..#.#.###...##.#..
.##.#....#......##..#.#..#.##.#...##.######....#.....##.##.#..#####.#.#..
#..#.#..#.#.###.##.#...#.....##.##.#..###.#..#....#.##.#####.#.#..#..#...
#.###..###...###..###.....####.##..#####.#....####.#.#..####....##.###.##
..#.##..#.....##..#######.#.#..##..##..##...#..........##.#.#.#..#....#.#
....####.##.#..###.....##..##..#.####....#...#...##...#.#....#..#.#..###.
#....##...###.#####.#.###.#...#.#.#.#....#..##...#.#...#..#..#.....#..#.#
###....##.##..#.##..#######.##.#.#.......#.##....###..#.#.......#.#####..
#.##.#.####..##.#.#...######..###..##.##......###.##.#.##.##..#.....#.##.
.###..##..###.#.##.#...#......#####.#.#..#......#.##.#.#.##..#..###.##.#.
.##.##.##..#.###.#...##.####.#..#.#..#.##...###.#.....#.#...#####.#.#####
##.#..#...#.#....#.#.#.#..###...####...#......##...##.#..###..##..##.###.
#....#.##.....#..###..##.###.##.#.###....#.#.###.#.....#..#..#..#..#####.
.##.######.#..####..#.##.###..#...#####.##....##..##.#.#.##..#####.####.#
..#..#####.##.#..#.##.##.#...##.#..###.#.##.#..#..#.##.##.###.##....#.#..
..##.#.#.##.##...##..#.#....##.#..#.#.#..#####..##....#.#.#.###.....#..##
#.#.##..#...####.##..#....#.#..##.#..#.####.##.#.###..#.#...#.##..####..#
##.......#.#.##.##....#.##...###..#.#..###.#..#.#..#.##...##...##..##...#
####.##..#..#..#..##.#.....#.#.###..##..#...#....#.##...#...##......##...
##..#....#..####.##.#.#....#.#.###...#.##...##.....##....#.###.#..#.####.
###.#...#.....#.#.##..#....##...####..#..#.....#....####..##.#.#....#####
#..###...####..#.##.#..###.#...##.#.#.###.###.#.#...#..##.##..##.##.#..##
#####...##....#.#.###......##.##.###.#..#.##.##.###...#..##.##...#######.
.#.#.#########..###...#..#..######.......##.#....#.##.###..#...##...##..#
...###..#.##.#.#..#.........####.#.##...####..####..####.#.#.....#.#.#..#
#####..#.##..###..###.#.##.#.##.###......#..#..#..###...##..#.###.###..##
.##.#.#.#.....###.##.#..###...#....#..##..#....#.##.#.....####..##..#..##
##..#...#.....##.##.#...#.#.##.###..##.#....####....#####...#...#...####.
.####....#...#.#..##..###...#.#..#.....#.#.##..#####........##.##....####
##.#####...#.####.#....#.#..##.##.###...##...#.##.##......#.##.......##..
.##...##..#........####..#...#.#...###.......###.#.#..#.##.###...#..#....
....#.#.#............##.#..####...#...##.##..#....#..#.#..#.#.#.#.#.#.###
..#.#..#.#####.#.##.##.##..#.##.#..###..###..###..####.#.#.##..######.#..
.#.#...#.##..##..#.####...#..##..####.#######.####.#...##....###.##.#.###
###.#..###.##.......##..#.....#.#.##.##.#.###.#..#####...##.##.#.....#...`;

const input2 = `....#..
..###.#
#...#.#
.#...##
#.###..
##.#.##
.#..#..`;

const input3 = `.....
..##.
..#..
.....
..##.
.....`;

const input4 = `.....
.###.
.###.
.###.
.....`;

const input5 = `..#..
..#..
.....
..#..
..#..`;

const input6 = `.....
.....
##.##
.....
.....`;

const input7 = `....#..
..###.#
#...#.#
.#...##
#.###..
##.#.##
.#..#..`

const input8 = `################################
################################
##............................##
##.#...#.####.####.####.#...#.##
##.##.##.#....#..#.#..#..#.#..##
##.#.#.#.###..####.####...#...##
##.#...#.#....#.#..#.#....#...##
##.#...#.####.#..#.#..#...#...##
##............................##
################################
##............................##
##...#...#.#...#..##...###....##
##....#.#..##.##.#..#.#.......##
##.....#...#.#.#.####..###....##
##....#.#..#...#.#..#.....#...##
##...#...#.#...#.#..#..###....##
##............................##
################################
################################`;

const expected = [
  `.################################.
  ..................................
  #.###...#.####.####.####.#...###.#
  #.#..###.#....#....#....#.###..#.#
  #..##...#.####.####.####.#...##..#
  #.#.##.##.#.#.#...#.#...#.#.#.#..#
  #.#.#...#.##..#.###.###.#..#..#..#
  #.#.#.##.#..###..#.#..#...#...#..#
  #..##...#.##...#..#.#..#...#..#..#
  #.#..###.#..###.##.#.##.###.##.#.#
  #.###...#.##...#..#.#..#...#..##.#
  #.#...#...#.#...#..##...###....#.#
  #..#..........................#..#
  #..#...#.#.#.#.##.#..#.#.##...#..#
  #..#....#..#....#.###.#.#.....#..#
  #..#...#.#.#..##.#....#..#..#.#..#
  #..#..#...#.#...#.#..#..#.#...#..#
  #.#.##.###.#.###.#.##.####.###.#.#
  #.##..#...#.#...#.#..#....#...##.#
  ..................................
  .################################.`,
  `....##...#.#..#.#..#.#..#.#...##...
  ..##..###.#.##.#.##.#.##.#.###..##.
  #.#.##...#.####.#.##.##.#.#...###.#
  #.#...#.#.#....#.#..#..#.#.#.#..#.#
  #...##.#.#.####.#.##.##.#.#.#.##.#.
  #.#..##.##.#.#.#.#.#.#.#.#.#.#..##.
  #.#.#....#.##..#.###.##.#...#.#..#.
  #.#...#.#.#..#.#..#.#..#.##...#..#.
  #...##.#.#.##.#.#..#.#..#...#..#.#.
  #.#...#.#.#..#.#.##.#.##.#.#.##.#.#
  #.#.#..#...##.#.#..#.#..#.#.#..##.#
  #.#..#.#.#................#.....#.#
  #....#.....#.#...#..###.##.#..#..#.
  #..#...#..#.#.##.#.#......#...#..#.
  #..#.....#.#.....#.#...#.#.#..#..#.
  #..#....#.#.#...#.#.##..#.#..##..#.
  #...#..#...#.#.#.#.#..#..#.#...#.#.
  #.#..##.#.#.#.#.#.#.##.#..#.#.#.#.#
  .........#.....#........##...#.....
  .#.##..#...#.#...#.#..#....#...##.#
  ...................................
  ..################################.`,
  `.....##...#.#..#.#..#.#..#.#...##....
  ........#....................#....#..
  ..#.#..#.#.#.##.#.##.#.##.#.#.#..#...
  #.#...#...#.####.#.##.##.#.#...###..#
  #.#..#.#.#.#....#.#..#..#.#.#.#..#..#
  #...#.#.#.#.####.#.##.##.#.#.#.##.#..
  #.#...##.##.#.#.#.#.#.#.#.#.#.#..#.#.
  #.#.#.....#.##.#.#.##.##.#...#..#..#.
  #.#....#.#.#..#.#..#.#..#.#.#.#..#...
  #...#.#.#.#.##.#.#..#.#..#...#..#.#..
  #.#....#.#.#..#.#.##.#.##.#.#.##.#..#
  #.#.#...#...#.........#....#....##.#.
  #.#...#.#.#..###.#..##...#.#.#...#..#
  #....#......#....#....##.##..##...#..
  #..#....#..#.#..#.##.......#..#..#...
  #..#......#.#..#..#.#.##..#..#..##...
  #..#.....#.#.#...#.#.#...#.#.#.#.#...
  #....#..#...#.#.#.#.#..#..#.#...#.#..
  #..#.....#.#...#.#......#..#.#.#....#
  ......##.....#.....#.##..........#...
  ..##..#.#.#.#.#.#.#.#..#.##.#.##..##.
  ....##############################...
  ..#................................#.`,
  `....#.........................#......
  ......##.#.#..#.#..#.#..#.#.#...#....
  ..........#.##.#.##.#.##.#........#..
  ..##..#.#..................#.#..#....
  #.#..#...#.####.#.##.##.#.#...##.#..#
  #.#.#.#.#.#....#.#..#..#.#.#.#..#...#
  #....#.#.#.####.#.##.##.#.#.#.##.#...
  #.##..#.##.#.#.#.#.#.#.#.#.#.#..#..#.
  #.##.#...#.##.#.#.##.##.#...#.#....#.
  #.#...#.#.#..#.#.#..#..#.#.#..#.#....
  #..##..#.#.##.#.#..#.#..#...#..#..#..
  #.#...#.#.#..#......#.#..#.#..#.#...#
  #.##...#...#...#.###.#.##.#.##.##.#..
  #.#...#.##..##.#.#..#......#....#...#
  #..........#....#.#..#.#.#.#..#...#..
  #..##..#..#..#.#.#......#..#..#.#....
  #..#.....#.#.....#.#.#.#.#.#...#.#...
  #..#....#.#.#.#.#.#.#.##..#.#.#.#....
  #...#.#....#.#.#.#.......#.#...#..#..
  #.#..##..#..#.....####..#....##.#..#.
  .##......##...###.......####.#.......
  .....#.#...#.#...#.#..#.......#..#.#.
  .....................................
  .#.##############################.#..`,
  `.....#.##.#.#..#.#..#.#..#.#...#......
  .............................#...#....
  ...##..#.#...##....#...#....#.#..#.#..
  .#.........##..####.###.###..........#
  ..#...#...#..##....#...#...#...##..#..
  #..##..#.#.#.##.#.#..#..#.#.#.#..#....
  #...#.#.#.#.#..#.#.##.##.#.#.#.##..###
  #..#...#.##.#.#.#.#.#.#.#.#.#.#..#....
  #.#.#.#...#.##.#.#.##.##.#...#..#.....
  #.#..#.#.#.#..#.#.#..#..#.#.#.#..#..#.
  #...#...#.#.##.#...#..#..#....#.#..#..
  #.#...#..#.#..#.####.#.#..#.#..#..#..#
  #.#..#..#.#.#.......#.#.#..#.#..#.##..
  #............###..#..#...##.#.##.#...#
  #..###.#.#..#....#..#.#.#..#.......#..
  #.......#..#..#...#.#....#.#..#..#....
  #..#......#.#..##.#...#.#.#.#...#..#..
  #..#...#...#.#...#.#.#.....#.#.#.#.#..
  #..#.#...##.#.#.#.#.#.###.#.#.#.#.....
  #..............#.#...#..#..#...#......
  ......##...#.#..#..#........##...#..#.
  ..##..#.#.#.#.#...#.#..#.##....#..#.#.
  ....########.#.###.############.##....
  ..#.........#.#...#............#...#..`,
  `......#....#.#..#.#..#.#..#.#.#.#......
  ........##....##....#...#........#.....
  ........#.#.#..............#........#..
  .#..##.......#..##.#.###.#...#.####...#
  ...#..#....#..##..#.#...#.#.#.......#..
  #...#.#.#.#.#.##.#.#..#..#.#.#.#...#...
  #....#.#.#.#.#..#.#.##.##.#.#.#.##.....
  #...#...#.##.#.#.#.#.#.#.#.#.#.#...####
  #.#..#.#...#.##.#.#.##.##.#...#.#......
  #.....#.#.#.#..#.#.#..#..#..##..#..#..#
  #..#.....#.#.##.#....#.#..#...#..#..#..
  #.#..#..#.#.#.......#.#.#..#.#..#.#...#
  #............#.#.###.#.#.#..#.#..#.#...
  #..#..#..#.#..#.....#.#...##.#......#.#
  #......#...#.#.###..#...#...#..##.#.#..
  #...###.....#.#..#..#..#..#.#..#...#...
  #..#.....##..#.....#.#..#..#.#...#.#...
  #..#....#...#.#.#.#.#.#.##..#.#.#..#...
  #.....#........#.#.#.#.#.#.#.#.#.#..#..
  ....#...#.#####.#.#.#.......#...#......
  .#..#.#...............#.####.....#..#..
  .......#.#.#.#.#.#.#.#.......##.#...#..
  ...#........#.#.#.#.#..........#.#...#.
  ...#.#######.....#...##########...#.#..
  .............#.#...#............#......`,
  `.......#..#.##....##..#.#..#.#.##........
  ........#...........#.....#........#.....
  .....##.#..#.#.####.#.###.#.#....##..#...
  ..#.........#.#...............#.#...#..#.
  ...#....##.....##..#.#.#.#.#.#..#.....#..
  #....#.#...#.#.##.#.#.....#.#.#....#.....
  #.....#.#.#.#.#..#.#.##.##.#.#.#.#.#.##..
  #...#....#.##.#.#.#.#.#.#.#.#.#.#..#....#
  #..#..#.#...#.##.#.#.##.##.#...#..#......
  #........#.#.#..#.#....#..#.#.#.#..#...#.
  #....#.#..#.#.#.....#.#.#..#....#.#...#..
  #.#...#.#....#.#.#.#.#.#.#..#.#.#..#...#.
  #..........#..#.#.#.#.#.#.#..#..#...#....
  #...#.#...##...#.#...#......#.#...#...##.
  #....##..#.#..#.#..##..#..##.#.#.#.#..#..
  #.........#..#.#...#.#.#..#..#.#....#....
  #..#...#....#.#..#..#.#..#..#.#...#.#....
  #..#....#...#..#...#.#.#.#.#.#.#.#.#.....
  #......#....###.#.#.#.#...#.#.#.#..#..#..
  ....#....##.............#.##.#...#.......
  ..#.#.#.......########.#.#.....#...##....
  .........###..........#.....##...#..#....
  ...#...#####.#...#.#.#.########.#.#....#.
  ...#.#.........#...................#.#...
  ............#.#.#.#.#.#........#.#.......`,
  `......#....#.....##...........#.........
  .........#...#.......#.#...##...#.......
  ....#...#.#.#.###...###.#.......#..#....
  .#....#.#.........#.#...#.##.........#..
  .......#.....#....#.....#.#..#.#.#.....#
  ...##....####.#.#....##.....#...#..#....
  #.....#.......##.#.#...#.#.#.#.....###..
  #......#.#.#.#..#.#.#.#.#.#.#.#..#.#..#.
  #...##..#.##.#.#.#.#.#.#.#.#.#.#...#...#
  #....##....#.##.#.#..#.##.#...#.#.......
  #.#.#.#.#.#.#......##.#..#..#...#..#...#
  #..........#.#.###...#.#..#..#.#.#..#...
  ##......##..#.#...#.#.#.#..#..#.#.#....#
  #..#.#.....#.#.#.#.#.#....#.#...##..##..
  #.....#..#.#..#.#.#.#..#.#.#.#.........#
  #.....##...#.#.#...#...#..#.#..#..#.....
  #...#.#.....#.#..#..#..#.#..#..###..##..
  #..#.....##..#..#..#.#.#...#.#......#...
  #..#....#.#...#...#.#.#.#.#.#.#.#.#.....
  #.......#....#..##.#...#.#.#.#.#...#.#..
  ....#.#...###.###.#.##...#..#....##.....
  .#..##..##...#...#.#..#.#.##..#.#...#...
  ......#....#.........#.#.#..#.......#...
  ...#.......##.#.#.#.....#.....#..#....#.
  ...##..###..........#.#...###..#...##...
  ...........#....##.#.#........#.#.......
  .............#..........................`,
  `..................##.....................
  .......#..#.#.#.......#.#...##.#.#.......
  ................##.......................
  .....#.##..........##.#...###.......#....
  ..#.......##.###.......##.....#.###...#..
  ....##....###....#...###............#...#
  .#.....##......#...##....###.#........#..
  ..........#.##.##.#.....#...#.#..#.#.#...
  #....##.#....#...#.#.#.#.#.#.#.#..##...#.
  #..........##.#.#.#.#.#.#.#.#.#.#...#....
  #.....#.##..#.#..#.#..#.##.#.#....#.....#
  #..#.....##..#.##.#..#.#..#....#.#..#...#
  #....#.#.##.#.#..#..#.#.#..#..#.#.#..#...
  #..#..#......#.#...#.#.#....#....#..#.#.#
  #...#......#..#.#.#.#.#.##.#.#.#.....#...
  #......#..##...#.#.#.#...#..#..#####....#
  #....##..#.#..#.#.#.#..#...#.#.......##..
  #.........##.#.#.....#.#.....#...#.......
  #..#...#......#..#..#.#.#.#.#.#.#.##.....
  #.......#..#....#..#.#.#.#.#.#.#.#...#...
  ....##.#.#..#.#..##.#.#...#.#.#...#..##..
  .#.........#.#.#.#.#.#..#.#..#..#....#...
  ..#...#..#..#...#......#.#.##..#...#.....
  ....##....#...#...#.#...#.#..#.#.#...#...
  .......####....#.#.#.###...##.....#.#..#.
  ............##...##......#...#..#....#...
  ....##......#............................
  ..............#.....#.#........#.#.......`,
  `........#..#.#.#...##..#.#......#.#.......
  .............................##...........
  ......#.....#.#..##...#..............#....
  ...#....###.........###.#.####.#.......#..
  ...............##.#.#.....#.#.#..###.#...#
  ..#..##....###.#.......##...............#.
  ........##.##..#.#.#.##..#.#.#.#.#...#....
  #........#....#.#.#.#...#.#.#.#.#...#.#.#.
  #.....##..##.#.#.#.#.#.#.#.#.#.#...#......
  #......##....#.#..#.#..#.##.#...##..##..#.
  #...#.....#.#.#.##.#..#.#..#..#...#.#.....
  #....#...#..#..#.....#.#..#.#....#..#.#..#
  #..#......##..#.#.#.#.#.#....#.#....#...##
  #......#.....#.#.#.#.#.#.##.#.#.#.#.......
  #....#...#.#.#..#.#.#.#......#....#...#..#
  #........#...#.#.#...#.#..#....###.##.....
  #.....##.....#..#..#..#.#..##.#...#...##..
  #...#..#...##..#...#.#.#.#...#.#.#.#......
  .........#.#....#...#.#.#.#.#.#.#.#.##....
  .#...........#.#..##.#.#.#.#.#.#.....#..#.
  .#...##.#.##..#.#.#........#..#...##......
  ........##.........#####..#.##.#....#.#...
  ...#........###..#.......#.#...#.#.....#..
  .....##..........#..#........#..#...#...#.
  ........#####..##.....###.#.#....#.#......
  ..................##..........#.......#...
  .....##......#.#.....#.#........#.#.......`,
  `.........#..#.#.#..#..#.#.#......#.#........
  .............................#..#...........
  .......#..#..#.#.#..#...#...###.......#.....
  ....#...#...#.......#.#.###......#.#....#...
  .............#.#..###...###......#...##....#
  ...#.#..#..#..#.#.#.#.#.....#####.....#.#...
  ........#.#.#...#.........#........#........
  #.......#.#..#.#.#.#.#.#.#.#.#.#.#...#..##..
  #.....#.....#.#.#.#.#.#.#.#.#.#.#.##........
  #.........##..#.#..#.#..#.##.#.......#.#.#..
  #...#...#..#.#.#.#.....#.#..#..#.#.#.#......
  #......#.#....#.#.###.#.#.#..#..##..#..#...#
  #...#..........#.#...#.#.#....#.....#...#..#
  #.......#..###..#.#.#.#.#..#.#.#.#.#........
  #.....#..#..##...#.#.#.#..#.....##.#...#..#.
  #........#...#.#..#...#.#.#..##...#.#.#.....
  #.....#..#.....#.#.#...#.#.....#...#..#..#..
  #....#...#.#.#.#...#..#.#.#.#.#.#.#.#.......
  ..........##......#..#.#.#.#.#.#.#...#.#....
  .#.........#.#..#.#.#.#.....#.#.#..##..#.#..
  .#...#.#.#...#...#.#.#.##.#.#..#..#.........
  ........#.....##......#..#.#.#...#...#.#....
  ....#.....#.#...##..#....#....##...#....#...
  .....#..#.###......#.#..#...#..#.#....#...#.
  ........#.....##......#...###.....#.#.......
  .................##..#.........#.......#....
  .....#..#.....#.#.....#.#........#.#........`,
].map(round => round.split('\n').map(line => line.trim().split('')));

const getRCKey = (r, c) => `${r},${c}`;

let minR = Infinity;
let maxR = -Infinity;
let minC = Infinity;
let maxC = -Infinity;
const elves = [];
const map = input1.split('\n').reduce((map, line, r) => {
  line.split('').reduce((map2, col, c) => {
    if (col === '#') {
      map2.set(getRCKey(r, c), '#');
      elves.push({
        pos: [r, c],
        nextPos: [r, c],
        wantsToMove: false,
      });
    }
    minC = Math.min(minC, c);
    maxC = Math.max(maxC, c);
    return map2;
  }, map);
  minR = Math.min(minR, r);
  maxR = Math.max(maxR, r);
  return map;
}, new Map());

const getRC = (map, r, c) => map.get(getRCKey(r, c)) ?? '.';
const setRC = (map, r, c, val) => map.set(getRCKey(r, c), val);

const printMap = (map, numbers = true) => {
  for (let r = minR; r <= maxR; r++) {
    let rowString = '';
    for (let c = minC; c <= maxC; c++) {
      if (numbers) {
        rowString += getRC(map, r, c).toString().padStart(2, ' ').padEnd(4, ' ');
      } else {
        rowString += getRC(map, r, c) === '.' ? '.' : '#';
      }
    }
    console.log(rowString);
  }
  console.log('\n');
}

const checkMap = (map, round) => {
  const expectedIdx = round;
  if (expectedIdx >= expected.length) {
    console.log(`Everything matches!`);
    process.exit(1);
  }
  for (let r = minR; r <= maxR; r++) {
    for (let c = minC; c <= maxC; c++) {
      const mapChar = getRC(map, r, c) === '.' ? '.' : '#';
      if (mapChar !== expected[expectedIdx][r - minR][c - minC]) {
        printMap(map, false);
        console.log(expected[expectedIdx].map(row => row.join('')).join('\n'));
        console.log(`Round ${expectedIdx} doesn't match!  Elf ${getRC(map, r, c)} at position [${r - minR}, ${c - minC}] is wrong`);
        process.exit(1);
      }
    }
  }
}

// printMap(map);

const N = [-1, 0];
const NE = [-1, 1];
const E = [0, 1];
const SE = [1, 1];
const S = [1, 0];
const SW = [1, -1];
const W = [0, -1];
const NW = [-1, -1];

const DIRS = [
  {
    moveDir: N,
    search: [NW, N, NE],
    label: 'up',
  },
  {
    moveDir: S,
    search: [SE, S, SW],
    label: 'dn',
  },
  {
    moveDir: W,
    search: [SW, W, NW],
    label: 'lt',
  },
  {
    moveDir: E,
    search: [NE, E, SE],
    label: 'rt',
  },
];

const copyPos = (dest, target) => {
  dest[0] = target[0];
  dest[1] = target[1];
};

let dirOffset = 0;
const claimed = new Map();

// for (round = 0; round < 10; round++) {
let iterCount = 0;
let elfHasMoved = true;
// while (elfHasMoved && iterCount < 10) {
while (elfHasMoved) {
  elfHasMoved = false;
  iterCount++;
  minR = Infinity;
  maxR = -Infinity;
  minC = Infinity;
  maxC = -Infinity;
  // console.log(`Start with direction [${DIRS[(0 + dirOffset) % DIRS.length].moveDir}]`);
  // Proposal Step
  elves.forEach((elf, e) => {
    // console.log(`Elf ${e} at ${elf.pos}`);
    let canMoveInAnyDirection = true;
    for (let d = 0; d < DIRS.length; d++) {
      const direction = DIRS[(d + dirOffset) % DIRS.length];
      if (direction.search.every((dir) => {
        return getRC(map, elf.pos[0] + dir[0], elf.pos[1] + dir[1]) === '.';
      })) {
        const r = elf.pos[0] + direction.moveDir[0];
        const c = elf.pos[1] + direction.moveDir[1];
        if (!elf.wantsToMove) {
          // console.log(`Wants to move ${direction.label} to [${r}, ${c}]`);
          elf.nextPos[0] = r;
          elf.nextPos[1] = c;
          elf.wantsToMove = true;
          if (getRC(claimed, r, c) === '.') setRC(claimed, r, c, e);
        } else {
          // console.log(`Can also move ${direction.label}`);
        }
      } else {
        canMoveInAnyDirection = false;
      }
    }
    if (canMoveInAnyDirection) {
      if (getRC(claimed, elf.nextPos[0], elf.nextPos[1]) === e) setRC(claimed, elf.nextPos[0], elf.nextPos[1], '.');
      copyPos(elf.nextPos, elf.pos);
      elf.wantsToMove = false;
      // console.log(`Elf ${e} can move in any direction so we're keeping it still.`);
    } else if (elf.wantsToMove) {
      const claimedVal = getRC(claimed, elf.nextPos[0], elf.nextPos[1]);
      if (claimedVal !== '.' && claimedVal !== e) {
        // console.log(`Position [${elf.nextPos}] was already claimed by elf ${claimedVal}.`);
        if (typeof claimedVal === 'number') {
          const prevClaimedElf = elves[claimedVal];
          copyPos(prevClaimedElf.nextPos, prevClaimedElf.pos);
          prevClaimedElf.wantsToMove = false;
          setRC(claimed, elf.nextPos[0], elf.nextPos[1], 'x');
        }
        copyPos(elf.nextPos, elf.pos);
        elf.wantsToMove = false;
      }
    }
    // console.log('\n');
  });
  // console.log(elves);
  // console.log(claimed);

  // Movement Step
  elves.forEach((elf, e) => {
    if (elf.wantsToMove) {
      setRC(map, elf.pos[0], elf.pos[1], '.');
      setRC(map, elf.nextPos[0], elf.nextPos[1], e);
      copyPos(elf.pos, elf.nextPos);
      elf.wantsToMove = false;
      elfHasMoved = true;
    }
    minR = Math.min(minR, elf.pos[0]);
    maxR = Math.max(maxR, elf.pos[0]);
    minC = Math.min(minC, elf.pos[1]);
    maxC = Math.max(maxC, elf.pos[1]);
  });

  // printMap(map);
  // checkMap(map, round);

  claimed.clear();
  dirOffset++;
}

let notEmptyCount = 0;
let emptyCount = 0;
for (let r = minR; r <= maxR; r++) {
  for (let c = minC; c <= maxC; c++) {
    if (getRC(map, r, c) === '.') emptyCount++;
    else notEmptyCount++;
  }
}
printMap(map);
console.log(notEmptyCount);
console.log(elves.length);
console.log(emptyCount);
console.log(iterCount);

// 4126 too low
// 4542 too high
// 4334 too high
// 4208 just right!